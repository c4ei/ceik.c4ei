<!doctype html>
<html>
<head>
  <title>CEIK SLOT</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      margin: 0;
    }
    #game-container {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .ly_userInfo {
      position: absolute;
      top: 10px;
      left: 10px;
      overflow: auto;
      height: 160px;
      width: 400px;
      z-index: 2;
      padding-left: 5px;
      background-color: aliceblue;
    }
    /* #spinButton {
      display: inline-block;
      padding: 10px 20px;
      margin-top: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    } */
    .highlight {
      animation: highlight 2s infinite;
    }
    @keyframes highlight {
      0% { transform: scale(1); }
      50% { transform: scale(1.5); }
      100% { transform: scale(1); }
    }
  </style>
</head>
<body>
  <div class="ly_userInfo">
    <p><%= user.email %> Your balance: <span id="balance"><%= user.point %></span></p>
    BET : <input type="number" id="betAmount" placeholder="Enter bet amount" value="1" style="width: 60px;" /> 
    <!-- <button id="spinButton">Spin</button> -->
    <div id="result"></div>
    <p>Your score: <span id="score">0</span></p>
  </div>
  <div id="game-container" style="background-color: white;"></div>
  <div id="result"></div>

  <script src="/js/pixi.js"></script>
  <script src="/js/slot.js"></script>
  <script src="/js/slot2.js"></script>
  <script src="/js/network.js"></script>
  <script>
    async function playGame() {
      const betAmount = parseInt(document.getElementById('betAmount').value);
      const balance = parseInt(document.getElementById('balance').innerText);

      if (!betAmount) {
        alert('Please enter a bet amount.');
        return;
      }

      if (betAmount > balance) {
        alert('Insufficient balance.');
        return;
      }

      network.send();
    }

    function highlightWinningLines(result) {
      const paylines = [
        [result[1][1], result[1][2], result[1][3]], // 중앙
        [result[0][1], result[0][2], result[0][3]], // 상단
        [result[2][1], result[2][2], result[2][3]], // 하단
        [result[1][1], result[0][1], result[2][1]], // 좌측
        [result[1][2], result[0][2], result[2][2]], // 중앙 세로
        [result[1][3], result[0][3], result[2][3]], // 우측
        [result[1][1], result[0][2], result[2][3]], // 대각선
        [result[2][1], result[0][2], result[1][3]]  // 역대각선
      ];

      paylines.forEach(line => {
        const uniqueNumbers = new Set(line);
        if (uniqueNumbers.size === 1 || line.some(num => num >= 3)) {
          line.forEach(num => {
            const symbol = document.querySelector(`.symbol-${num}`);
            if (symbol) {
              symbol.classList.add('highlight');
            }
          });
        }
      });
    }

    network.onresponse = function(response) {
      game.result(response.result);
      highlightWinningLines(response.result); // Highlight winning lines
    };

    // document.addEventListener('DOMContentLoaded', function() {
    //   document.getElementById('spinButton').addEventListener('click', playGame);
    // });
  </script>
</body>
</html>
