<!doctype html>
<html>
<head>
  <title>CEIK SLOT</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      margin: 0;
    }
    #game-container {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .ly_userInfo {
      position: absolute;
      top: 10px;
      left: 10px;
      overflow: auto;
      height: 140px;
      width: 400px;
      z-index: 2;
      padding-left: 5px;
      background-color: aliceblue;
    }
    #spinButton {
      display: inline-block;
      padding: 10px 20px;
      margin-top: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="ly_userInfo">
    <p><%= user.email %> Your balance: <span id="balance"><%= user.point %></span></p>
    BET : <input type="number" id="betAmount" placeholder="Enter bet amount" value="1" style="width: 60px;" />
    <div id="result"></div>
    <p>Your score: <span id="score">0</span></p>
  </div>
  <div id="game-container" style="background-color: white;"></div>
  <div id="result"></div>

  <script src="/js/slot.js"></script>
  <script src="/js/network.js"></script>
  <script>
    async function playGame() {
      const betAmount = parseInt(document.getElementById('betAmount').value);
      const balance = parseInt(document.getElementById('balance').innerText);

      if (!betAmount) {
        alert('Please enter a bet amount.');
        return;
      }

      if (betAmount > balance) {
        alert('Bet amount exceeds your balance.');
        return;
      }

      try {
        // 게임 실행 전에 잔고에서 베팅 금액을 차감합니다.
        const newBalance = balance - betAmount;
        document.getElementById('balance').innerText = newBalance; // 잔고 업데이트
        
        const response = await fetch('/slot/result', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ betAmount })
        });
        const data = await response.json();

        if (data.error) {
          alert(data.error);
        } else {
          const resultDiv = document.getElementById('result');
          resultDiv.innerHTML = data.result.map(row => row.join(', ')).join('<br>');
          document.getElementById('balance').innerText = data.balance;
          document.getElementById('score').innerText = data.score;
          game.result(data.result); // 게임 결과를 반영
        }
      } catch (error) {
        console.error('Error fetching result:', error);
      }
    }

    var btnPlay = game.sprite('btn-spin');
    btnPlay.x = 100 + (2 * 140);
    btnPlay.y = 100 + (3 * 140);
    btnPlay.action = Slot.ACTION.PLAY;

    btnPlay.interactive = true;
    btnPlay.buttonMode = true;

    // btnPlay.on('pointerdown', function() {
    //   const betAmount = parseInt(document.getElementById('betAmount').value);
    //   const balance = parseInt(document.getElementById('balance').innerText);

    //   if (betAmount > balance) {
    //     alert('Bet amount exceeds your balance.');
    //     return;
    //   }

    //   game.play();
    //   playGame();
    // });

    window.addEventListener('keydown', function(e) {
      if (e.keyCode == 32) { // Space bar
        const betAmount = parseInt(document.getElementById('betAmount').value);
        const balance = parseInt(document.getElementById('balance').innerText);

        if (betAmount > balance) {
          alert('Bet amount exceeds your balance.');
          return;
        }

        game.play();
        playGame();
      }
    });
  </script>
</body>
</html>
