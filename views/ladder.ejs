<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>사다리 게임</title>
    <style>
        .container {
            width: 60%;
            margin: 0 auto;
            text-align: center;
        }
        .betting-section {
            margin: 20px 0;
        }
        .betting-button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #007bff;
            color: #fff;
        }
        .high {
            background-color: #4CAF50;
            color: white;
        }
        .low {
            background-color: #f44336;
            color: white;
        }
        .disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        .graph-container {
            margin-top: 20px;
            position: relative;
            height: 30px;
            background-color: #ddd;
            display: flex;
        }
        .bar {
            height: 100%;
            display: flex;
        }
        .high-bar {
            background-color: #4CAF50;
            text-align: center;
            line-height: 30px;
        }
        .low-bar {
            background-color: #f44336;
            text-align: center;
            line-height: 30px;
        }
        .bar-text {
            width: 100%;
            display: flex;
            justify-content: space-between;
            position: absolute;
            top: 0;
            padding: 5px;
            box-sizing: border-box;
            color: #fff;
        }
        .bet-history {
            margin-top: 20px;
            text-align: left;
        }
        .bet-history table {
            width: 100%;
            border-collapse: collapse;
        }
        .bet-history th, .bet-history td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        .bet-history th {
            background-color: #f2f2f2;
        }
        .result-message {
            margin-top: 20px;
            font-size: 18px;
        }
        @media (min-width: 600px) {
            .betting-buttons {
                flex-direction: row;
                width: auto;
            }
            .betting-button {
                margin: 10px;
            }
        }
        #graph-container {
            width: 100%;
            display: flex;
            justify-content: space-around;
        }
        #high-bar, #low-bar {
            width: 45%;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="/">HOME</a> / <a href="/ladderList">사다리 게임결과</a> 
        <br>
        <h1>사다리 게임-<%=cur_game_id%>차</h1>
        <div id="timer">남은 시간: <span id="timeRemaining"></span> </div>
        <% if (gameResult) { %>
            <div class="result-message">
                <p>게임 결과: <%= gameResult %></p>
                <% if (userResult > 0) { %>
                    <p>축하합니다! 당신은 <%= userResult %> CEIK을 얻었습니다.</p>
                <% } else { %>
                    <p>아쉽습니다. 당신은 베팅에서 패배했습니다.</p>
                <% } %>
            </div>
        <% } else { %>
            <form id="bettingForm" action="/ladder/bet" method="POST">
                <input type="hidden" name="userIdx" value="<%= userIdx %>">
                <div class="betting-section">
                    전송가능 CEIK 수량 : <span id="accumulatedCount"><%=aah_balance%></span> <br />
                    <label for="bet_amount">베팅 금액: </label>
                    <input type="number" id="bet_amount" name="bet_amount" min="0.01" step="0.01" required>
                </div>
                <div class="betting-section" id="ly_bet_btn">
                    <button type="button" id="highButton" class="betting-button high">높음</button>
                    <button type="button" id="lowButton" class="betting-button low">낮음</button>
                    <input type="hidden" id="bet_choice" name="bet_choice">
                    <input type="hidden" id="game_id" name="game_id" value="<%=cur_game_id%>">
                    <button type="submit" id="betSubmit" class="betting-button" disabled hidden>베팅</button>
                </div>
            </form>
        <% } %>
        <p id="message"></p>
        <div id="game_result" style="display:none;">
            <p>현재 게임 결과: <%= gameResult %></p>
            <p>내 베팅 결과: <%= userResult %></p>
            <p>내 승률: <%= userWinningRate %>%</p>
            <p>얻은 CEIK: <%= userCEIKGain %></p>
            <p>원금 대비 증가율: <%= userPercentGain %>%</p>
        </div>
        <div class="graph-container">
            <div id="highBar" class="bar high-bar" style="width: <%= highPercent.toFixed(2) %>%"></div>
            <div id="lowBar" class="bar low-bar" style="width: <%= lowPercent.toFixed(2) %>%"></div>
            <div class="bar-text">
                <span>높음: <span id="highBar_txt"><%= highPercent.toFixed(2) %></span>%</span>
                <span>낮음: <span id="lowBar_txt"><%= lowPercent.toFixed(2) %></span>%</span>
            </div>
        </div>
        <% if (userBets && userBets.length > 0) { %>
            <div class="bet-history">
                <h3>나의 베팅 내역 (최근 10행)</h3>
                <table>
                    <tr>
                        <th>게임번호</th>
                        <th>베팅 선택</th>
                        <th><%= __("text_103") %></th>
                        <th>결과</th>
                        <th>승리금액</th>
                        <th>베팅 시간</th>
                    </tr>
                    <% userBets.forEach(function(bet) { %>
                        <tr <%if(bet.bet_choice==bet.result){%> bgcolor="#f7f9cb" <%} %>>
                            <td>
                                <% if (bet.result==null && bet.game_id!=cur_game_id ){  %><a href="/ladderend/<%= bet.game_id %>"><%= bet.game_id %></a>
                                <% } else { %>
                                <%= bet.game_id %>
                                <% } %>
                            </td>
                            <td><%= bet.bet_choice %></td>
                            <td><%= bet.bet_amount %></td>
                            <td><%= bet.result %></td>
                            <td><%= bet.win_amount %></td>
                            <td><%= bet.YYMMDD %></td>
                        </tr>
                    <% }) %>
                </table>
            </div>
        <% } %>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const highButton = document.getElementById('highButton');
            const lowButton = document.getElementById('lowButton');
            const betSubmit = document.getElementById('betSubmit');
            const betChoiceInput = document.getElementById('bet_choice');
            const message = document.getElementById('message');

            if (highButton && lowButton && betChoiceInput && betSubmit) {
                highButton.addEventListener('click', function() {
                    handleBetChoice('high', highButton, lowButton, betChoiceInput, betSubmit, message);
                });

                lowButton.addEventListener('click', function() {
                    handleBetChoice('low', highButton, lowButton, betChoiceInput, betSubmit, message);
                });
            }

            // Initialize timer
            const endTime = new Date('<%= endTime %>');
            const timerElement = document.getElementById('timeRemaining');
            updateTimer(timerElement, endTime);
            setInterval(() => updateTimer(timerElement, endTime), 1000);
        });

        function handleBetChoice(choice, highButton, lowButton, betChoiceInput, betSubmit, message) {
            let _ceik_qty = parseFloat(document.getElementById('accumulatedCount').innerText);
            let _bet_amount = parseFloat(document.getElementById('bet_amount').value);
            if (isNaN(_bet_amount) || _bet_amount === 0) {
                alert('베팅할 수량을 입력하세요');
                document.getElementById('bet_amount').focus();
                return;
            }
            if (_ceik_qty < _bet_amount) {
                alert('베팅할 수있는 CEIK 가 적습니다.');
                return;
            }
            betChoiceInput.value = choice;
            highButton.classList.add('disabled');
            lowButton.classList.add('disabled');
            highButton.disabled = true;
            lowButton.disabled = true;
            betSubmit.disabled = false;
            message.textContent = '선택 후 변경 할 수 없습니다.';
        }

        function updateTimer(timerElement, endTime) {
            const now = new Date();
            const timeRemaining = endTime - now;
            if (timeRemaining >= 0) {
                const minutes = Math.floor(timeRemaining / 1000 / 60);
                const seconds = Math.floor((timeRemaining / 1000) % 60);
                timerElement.textContent = `${minutes}분 ${seconds}초`;
                if(document.getElementById('message').innerText !='게임 중 입니다. 베팅이 가능 합니다.'){
                    document.getElementById('message').innerText = '게임 중 입니다. 베팅이 가능 합니다.';
                    document.getElementById('ly_bet_btn').style.display = 'block';
                }
            } else {
                timerElement.textContent = '게임 종료';
                if(document.getElementById('message').innerText != '다음 게임 준비 중입니다.'){
                    document.getElementById('message').innerText = '다음 게임 준비 중입니다.';
                    document.getElementById('ly_bet_btn').style.display = 'none';
                }
                setTimeout(() => { location.href='/ladderend/<%=cur_game_id%>'; }, 3*1000); // 3 Sec
            }
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const gameId = '<%=cur_game_id%>';

            function fetchGraphData() {
                fetch(`/api/graph-data/${gameId}`)
                    .then(response => response.json())
                    .then(data => updateGraph(data))
                    .catch(error => console.error('Error fetching graph data:', error));
            }

            function updateGraph(data) {
                const highBar = document.getElementById('highBar');
                const lowBar = document.getElementById('lowBar');
                const highBar_txt = document.getElementById('highBar_txt');
                const lowBar_txt = document.getElementById('lowBar_txt');
                lowBar
                if (highBar && lowBar) {
                    highBar.style.width = data.high + '%';
                    lowBar.style.width = data.low + '%';
                    highBar_txt.innerText = data.high.toFixed(2);
                    lowBar_txt.innerText = data.low.toFixed(2);
                } else {
                    console.error('Graph elements not found');
                }
            }
            // 1초마다 fetchGraphData 함수 호출
            setInterval(fetchGraphData, 1000);
        });
        document.getElementById('highButton').addEventListener('click', function() {
            setTimeout(function() {
                document.getElementById('betSubmit').click();
            }, 500); // 0.5초 딜레이
        });

        document.getElementById('lowButton').addEventListener('click', function() {
            setTimeout(function() {
                document.getElementById('betSubmit').click();
            }, 500); // 0.5초 딜레이
        });
    </script>
   
</body>
</html>
